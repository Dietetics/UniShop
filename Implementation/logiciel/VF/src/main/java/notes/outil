done:

DatabasePath




myScanner
    -getIntInput()
    -getDoubleInput()
    -getStringInput()

CSVHandler
    -List<String[]> readCSV(String filePath, int numLines)
    -void printCSV(List<String[]> data)
    -void printCSV(List<String[]> data, int columnIndex)
    -void coverCSV(String filePath, List<String[]> data)
    -void appendCSV(String filePath, List<String[]> data)
    -void appendCSV(String filePath, String rowData)
    -List<String> searchKeywordInCSV(String filePath, String keyword)
    -List<String> readAllLinesFromCSV(String filePath)
    -List<Integer> readAllLinesFromCSVAsIntegers(String filePath)
    -List<Integer> searchKeywordInCSVIndex(String filePath, String keyword)
    -ajusterCSVSelonIndex(String filePath, int lineIndex, String[] newData)
    -boolean verifieSiExiste(String csvFilePath, List<String> searchTerms)
    -boolean isExiste(String csvFilePath, String terme)
    -int findOccurrenceIndex(String csvFilePath, String searchTerm, int columnIndex)
    -boolean isValueAtIndexAndColumn(String csvFilePath, int index, int column, String value)
    -String readLineByIndex(String csvFilePath, int targetIndex)
    -String getColumnValue(String csvLine, int columnIndex)
    -void uploadCSVLine(String filePath, int index, List<String> newCSVLine)
    -void uploadCSVLine(String filePath, int index, String newCSVLine)
    -updateCSVColumn(String csvLine, int columnIndex, String newValue)
    -void sortByColumn(List<String[]> data, int column, SortOrder order)
    -boolean isNumeric(String str)
    -enum SortOrder
    -String getValueAtIndexAndColumn(String csvFilePath, int index, int column)



to do:
